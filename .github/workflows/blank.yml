# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9 
     
      - name: code validation
        run: python -m pip install pre-commit
    
        
      - name: determine tag
        run: |
        
         echo \"RELEASE_TAG=${GITHU_REF#refs/tags/}\" >> $GITHUB_ENV
         echo $GITHUB_ENV
      
      - name: Get tags
        id: get-tags
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
           echo "::save-state name=tags::$(git tag -l)"
           git tag -l
        
      - name: Find latest tag
        id: latest-tag
        run: |
          TAGS=${{ steps.get-tags.outputs.tags }}
          LATEST_TAG=$(echo "$TAGS" | tr ' ' '\n' | sort -V | tail -n 1)
          echo "::save-state name=latest_tag::$LATEST_TAG"

      - name: Display latest tag
        run: echo "Latest tag is ${{ steps.latest-tag.outputs.latest_tag }}" 

      - name: Print GitHub tag
        run: |
          if [[ $GITHUB_REF =~ refs/tags/ ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "GitHub tag: $TAG"
          else
            echo "Not a tag."
          fi
        shell: bash
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.9.17/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.9.17/x64/lib
          RELEASE_TAG: ${{ github.ref }} 
