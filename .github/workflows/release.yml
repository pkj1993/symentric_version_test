name: Release
on:
  workflow_dispatch:
  pull_request:
    types:
     - closed
jobs:
  if_merged:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
         fetch-depth: 0
         
      - name: Get Repository Tags
        id: repository-tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "$LATEST_TAG"
        
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed

      - name: Debug Event Payload
        run: cat $GITHUB_EVENT_PATH

      - name: Check PR Bumper Label
        run: |
          # Fetch commit messages from the pull request
          PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          COMMITS=$(curl -s "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/commits" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" | jq -r ".[].commit.message")

          # Regular expression pattern for conventional commit messages
          PATTERN='^(feat|fix|chore|docs|style|refactor|perf|test)(\([A-Za-z0-9-]+\))?: .+'

          for COMMIT in $COMMITS; do
            if ! [[ $COMMIT =~ $PATTERN ]]; then
              echo "Error: Commit message doesn't follow conventional format: $COMMIT"
              exit 1
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        shell: bash          

      - name: Release snapshot
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.run_number }}
          
      - name: execute py script # run main.py
        run: |
         LATEST_TAG1=1.0.0
         task_name="feat"
         NEW_TAG=$(python ./.github/workflows/version.py ${{ steps.repository-tag.output.LATEST_TAG}} $task_name)
         #echo $NEW_TAG
      - name: Create version Tag
        run: |
         echo ${NEW_TAG}
         #git config user.name "${{ github.repository_owner }}"
         #git config user.email "pkj1993@gmail.com"

          
      
