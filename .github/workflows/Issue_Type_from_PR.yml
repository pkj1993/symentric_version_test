name: Auto Tag and Identify PR

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed

jobs:
  tag_and_identify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
         fetch-depth: 0
          
    - name: Identify PR Type and Tag Repository
      id: tag_and_identify
      env:
       GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        # Use GitHub API to get the PR details
        PR_NUMBER=$(echo "${{ github.event.pull_request.url }}" | awk -F'/' '{print $NF}')
        PR_DETAILS=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
                      "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")
        echo "$PR_TITLE"
        # Extract issue type from PR title
        PR_TITLE=$(echo "$PR_DETAILS" | jq -r '.title')
        echo "$PR_TITLE"
        if echo "$PR_TITLE" | grep -qiE 'chore'; then
          ISSUE_TYPE="chore"
        elif echo "$PR_TITLE" | grep -qiE 'docs'; then
          ISSUE_TYPE="docs"
        elif echo "$PR_TITLE" | grep -qiE 'feat'; then
          ISSUE_TYPE="feat"
        elif echo "$PR_TITLE" | grep -qiE 'fix'; then
          ISSUE_TYPE="fix"
        elif echo "$PR_TITLE" | grep -qiE 'refactor'; then
          ISSUE_TYPE="refactor" 
        elif echo "$PR_TITLE" | grep -qiE 'style'; then
          ISSUE_TYPE="style"
        elif echo "$PR_TITLE" | grep -qiE 'test'; then
          ISSUE_TYPE="test"   
        else
          ISSUE_TYPE="Other"
        fi
        echo "type:$ISSUE_TYPE"
        echo "::set-output name=issue_type::$ISSUE_TYPE"
        echo "type2:$issue_type"
       
      
    outputs:
      issue_type: ${{ steps.tag_and_identify.outputs.issue_type }}
